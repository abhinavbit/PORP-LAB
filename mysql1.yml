---
- hosts: all
  become: True

  tasks:
     - name: Include vars
       include_vars: 
          file: 'vars/main.yml'

     - name: Download Percona Repo
       get_url: 
          url: "{{ percona_repo_url }}"
          dest: "{{ percona_repo_dest }}"

     - name: Install Percona Repo
       apt:
          deb: "{{ percona_repo_dest }}"

     - name: update apt chache
       apt:   
          update_cache: yes

     - name: Add hosts inside /etc/hosts
       lineinfile:
         path: /etc/hosts
         state: present
         line: "{{ item }}"
       with_items:
         - "{{ mysql_server_1_ip }}  {{ mysql_server_1_hostname }} {{ mysql_server_1_hostname }}" 
         - "{{ mysql_server_2_ip }}  {{ mysql_server_2_hostname }} {{ mysql_server_2_hostname }}"
         - "{{ mysql_server_3_ip }}  {{ mysql_server_3_hostname }} {{ mysql_server_3_hostname }}"

     - name: Install Percona Server
       apt:
         name: "{{ item }}" 
         state: present
         force: yes 
       vars:
         item:
            - "{{ percona_server_common }}"
            - "{{ percona_server_client }}"
            - "{{ percona_server_server }}"       
       environment:
          DEBIAN_FRONTEND: noninteractive

     - name: configure my.cnf
       template: 
         src: mysql1.my.cnf.j2 
         dest: /etc/mysql/my.cnf

     - name: restart mysql
       service:
             name: mysql
             state: restarted
             enabled: yes

     - name: Install Percona Toolkit
       apt:
         name: percona-toolkit
         state: present
         force: yes

     - name: Install dependency 
       apt:
         name: python2.7-mysqldb
         state: present

     - name : Create repl user 
       mysql_user:
         name: "{{ ReplicationUser }}"
         password: "{{ ReplicationPassword }}"
         host: '%'
         priv: "*.*:REPLICATION CLIENT,REPLICATION SLAVE"
         state: present

     - name : Create proxysql user
       mysql_user:
         name: "{{ ProxySQLUser }}"
         password: "{{ ProxySQLPassword }}"
         host: '%'
         priv: "*.*:ALL PRIVILEGES"
         state: present

     - name : Create orchestrator MySQLTopologyUser
       mysql_user:
         name: "{{ OrcMySQLTopologyUser }}"
         password: "{{ OrcMySQLTopologyPassword }}"
         host: '%'
         priv: "*.*:SUPER,PROCESS,REPLICATION SLAVE,RELOAD,SELECT"
         state: present

     - name: Install PMM Client
       apt:
         name: pmm-client
         state: present
         force: yes

     - name: Configure pmm-client
       shell: "{{ item }}"
       with_items:
         - pmm-admin config --server {{ app_server_ip }}
         - sleep 10
         - pmm-admin add mysql 
